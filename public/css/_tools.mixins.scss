/*------------------------------------*\
	Mixins
\*------------------------------------*/


/**
* Convert pixels to REMs with fallback for older browsers
* Example usage:
* @include font-size(14px)
*/
@mixin font-size($size) {
	font-size: $size;
	font-size: ($size / $base-font-size) * 1rem;
}




/**
* Convert pixels to REMs with fallback for older browsers
* Example usage:
* @include font-size(14)
*/
@mixin responsive($property, $size){
	#{$property}: calc(#{$size}vw + #{$size}vh + #{$size}vmin);
}




/**
* Add a breakpoint
* Example usage:
* @include breakpoint(s) { // css }
*/
@mixin breakpoint($size) {
	@if $size == xl {
		@media screen and (max-width: $break-xl) { @content; }
	}

	@if $size == l {
		@media screen and (max-width: $break-l) { @content; }
	}

	@if $size == m {
		@media screen and (max-width: $break-m) { @content; }
	}

	@if $size == s {
		@media screen and (max-width: $break-s) { @content; }
	}

	@if $size == xs {
		@media screen and (max-width: $break-xs) { @content; }
	}
}



/**
* Create a breakpoint for below a given pixel size
* Example usage:
* @include below(200px) { // css }
*/
@mixin below($size) {
	@media screen and (max-width: $size) { @content; }
}



/**
* Create a breakpoint for above a given pixel size
* Example usage:
* @include above(200px) { // css }
*/
@mixin above($size) {
	@media screen and (min-width: $size) { @content; }
}


/**
Create a CSS transition
* @param {String} $transition    Parameters for the transition
* @example @include transition(background 0.5s linear);
* @group global
*/
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}



/**
 * Clearfix
 * Example usage:
 * .wrap {
 * 		...
 * 		@extend %clearfix;
 * }
 */
%clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}



/* for full size backgrounds */
.fillArea{
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

@mixin theme($textColour, $backgroundColour){
	h1,h2,h3,h4,h5,h6,p,a,li,span{
		color: $textColour;
	}
	hr{
		background: $textColour;
	}
	a:hover{
		color: darken($textColour, 20%);
	}
	.btn{
		border-color: $textColour;
		color: $textColour;
		&:after{
			background: $textColour;
		}
	}
	&:not(.block--fullscreen).block--about:not(.block--about-first){
		background: $backgroundColour;
	}
	&.block--services:not(.block--services-first){
		li{
			color: #fff;
		}
		.block-background:after{
			@extend .fillArea;
			background: linear-gradient(to left,
				rgba($backgroundColour, 0.6) 0%,
				rgba($backgroundColour, 1) 100%
			);
		}
	}
	&.block--tech:not(.block--tech-first){
		.block-background:after{
			@extend .fillArea;
			background-color: rgba($backgroundColour, 0.4);
		}
	}
	.block--casestudy-testimony{
		background: $backgroundColour;
		blockquote{
			color: #fff;
			footer{
				color: $textColour;
			}
		}
	}
}
